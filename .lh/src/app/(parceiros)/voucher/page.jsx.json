{
    "sourceFile": "src/app/(parceiros)/voucher/page.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 9,
            "patches": [
                {
                    "date": 1739999804440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1739999854278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,54 @@\n-// ... outras importações\r\n+'use client'; // Importante: indica um Client Component\r\n+\r\n+import { useState, useEffect } from 'react';\r\n+import { Container, Row } from 'react-bootstrap';\r\n import VoucherCard from './components/VoucherCard';\r\n \r\n-// ... dentro do seu componente de página\r\n-const voucher = { // Dados do voucher (substitua pelos dados reais)\r\n-    nome: \"Voucher de Desconto Exclusivo\",\r\n-    descricao: \"20% de desconto em qualquer compra\",\r\n-    codigo: \"ABCXYZ123\",\r\n-    validade: \"31/12/2024\",\r\n\\ No newline at end of file\n+const VoucherPage = () => {\r\n+    const [voucher, setVoucher] = useState(null); // Estado para armazenar os dados do voucher\r\n+    const [loading, setLoading] = useState(true); // Estado para controlar o carregamento\r\n+    const [error, setError] = useState(null); // Estado para armazenar erros\r\n+\r\n+    useEffect(() => {\r\n+        // Função para buscar os dados do voucher (substitua pela sua lógica)\r\n+        const fetchVoucherData = async () => {\r\n+            try {\r\n+                const response = await fetch('/api/voucher'); // Substitua pelo seu endpoint da API\r\n+                if (!response.ok) {\r\n+                    throw new Error(`Erro ao buscar voucher: ${response.status}`);\r\n+                }\r\n+                const data = await response.json();\r\n+                setVoucher(data.voucher); // Assumindo que a API retorna um objeto { voucher: { ... } }\r\n+            } catch (err) {\r\n+                setError(err);\r\n+                console.error(err);\r\n+            } finally {\r\n+                setLoading(false);\r\n+            }\r\n+        };\r\n+\r\n+        fetchVoucherData(); // Chama a função ao montar o componente\r\n+    }, []); // O array vazio garante que o efeito execute apenas uma vez\r\n+\r\n+    if (loading) {\r\n+        return <div>Carregando voucher...</div>; // Mensagem de carregamento\r\n+    }\r\n+\r\n+    if (error) {\r\n+        return <div>Erro ao carregar voucher: {error.message}</div>; // Mensagem de erro\r\n+    }\r\n+\r\n+    if (!voucher) {\r\n+        return <div>Nenhum voucher encontrado.</div>; // Mensagem caso não haja voucher\r\n+    }\r\n+\r\n+    return (\r\n+        <Container>\r\n+            <Row>\r\n+                <VoucherCard voucher={voucher} /> {/* Renderiza o componente VoucherCard */}\r\n+            </Row>\r\n+        </Container>\r\n+    );\r\n };\r\n \r\n-// ... no seu JSX\r\n-<VoucherCard voucher={voucher} />\n+export default VoucherPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1739999931619,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,52 +1,51 @@\n-'use client'; // Importante: indica um Client Component\r\n+'use client';\r\n \r\n import { useState, useEffect } from 'react';\r\n import { Container, Row } from 'react-bootstrap';\r\n import VoucherCard from './components/VoucherCard';\r\n \r\n const VoucherPage = () => {\r\n-    const [voucher, setVoucher] = useState(null); // Estado para armazenar os dados do voucher\r\n-    const [loading, setLoading] = useState(true); // Estado para controlar o carregamento\r\n-    const [error, setError] = useState(null); // Estado para armazenar erros\r\n+    const [voucher, setVoucher] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+    const [error, setError] = useState(null);\r\n \r\n     useEffect(() => {\r\n-        // Função para buscar os dados do voucher (substitua pela sua lógica)\r\n         const fetchVoucherData = async () => {\r\n             try {\r\n-                const response = await fetch('/api/voucher'); // Substitua pelo seu endpoint da API\r\n+                const response = await fetch('/api/voucher'); // Seu endpoint da API\r\n                 if (!response.ok) {\r\n                     throw new Error(`Erro ao buscar voucher: ${response.status}`);\r\n                 }\r\n                 const data = await response.json();\r\n-                setVoucher(data.voucher); // Assumindo que a API retorna um objeto { voucher: { ... } }\r\n+                setVoucher(data.voucher); // Assumindo que a API retorna { voucher: { ... } }\r\n             } catch (err) {\r\n                 setError(err);\r\n                 console.error(err);\r\n             } finally {\r\n                 setLoading(false);\r\n             }\r\n         };\r\n \r\n-        fetchVoucherData(); // Chama a função ao montar o componente\r\n-    }, []); // O array vazio garante que o efeito execute apenas uma vez\r\n+        fetchVoucherData();\r\n+    }, []);\r\n \r\n     if (loading) {\r\n-        return <div>Carregando voucher...</div>; // Mensagem de carregamento\r\n+        return <div>Carregando voucher...</div>;\r\n     }\r\n \r\n     if (error) {\r\n-        return <div>Erro ao carregar voucher: {error.message}</div>; // Mensagem de erro\r\n+        return <div>Erro ao carregar voucher: {error.message}</div>;\r\n     }\r\n \r\n     if (!voucher) {\r\n-        return <div>Nenhum voucher encontrado.</div>; // Mensagem caso não haja voucher\r\n+        return <div>Nenhum voucher encontrado.</div>;\r\n     }\r\n \r\n     return (\r\n         <Container>\r\n             <Row>\r\n-                <VoucherCard voucher={voucher} /> {/* Renderiza o componente VoucherCard */}\r\n+                <VoucherCard voucher={voucher} />\r\n             </Row>\r\n         </Container>\r\n     );\r\n };\r\n"
                },
                {
                    "date": 1740000514068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,45 +9,32 @@\n     const [loading, setLoading] = useState(true);\r\n     const [error, setError] = useState(null);\r\n \r\n     useEffect(() => {\r\n-        const fetchVoucherData = async () => {\r\n-            try {\r\n-                const response = await fetch('/api/voucher'); // Seu endpoint da API\r\n-                if (!response.ok) {\r\n-                    throw new Error(`Erro ao buscar voucher: ${response.status}`);\r\n-                }\r\n-                const data = await response.json();\r\n-                setVoucher(data.voucher); // Assumindo que a API retorna { voucher: { ... } }\r\n-            } catch (err) {\r\n-                setError(err);\r\n-                console.error(err);\r\n-            } finally {\r\n-                setLoading(false);\r\n-            }\r\n+        // Simulação de dados da API (substitua pelos dados reais quando a API estiver pronta)\r\n+        const mockVoucherData = {\r\n+            nome: \"Voucher de Desconto Exclusivo\",\r\n+            descricao: \"20% de desconto em qualquer compra\",\r\n+            codigo: \"ABCXYZ123\",\r\n+            validade: \"31/12/2024\",\r\n         };\r\n \r\n-        fetchVoucherData();\r\n+        // Simula uma chamada de API (substitua pela chamada real quando a API estiver pronta)\r\n+        const simulateApiCall = new Promise((resolve) => {\r\n+            setTimeout(() => {\r\n+                resolve({ voucher: mockVoucherData });\r\n+            }, 500); // Simula um atraso de 500ms\r\n+        });\r\n+\r\n+        simulateApiCall.then(data => {\r\n+            setVoucher(data.voucher);\r\n+            setLoading(false);\r\n+        }).catch(err => {\r\n+            setError(err);\r\n+            setLoading(false);\r\n+        });\r\n     }, []);\r\n \r\n-    if (loading) {\r\n-        return <div>Carregando voucher...</div>;\r\n-    }\r\n-\r\n-    if (error) {\r\n-        return <div>Erro ao carregar voucher: {error.message}</div>;\r\n-    }\r\n-\r\n-    if (!voucher) {\r\n-        return <div>Nenhum voucher encontrado.</div>;\r\n-    }\r\n-\r\n-    return (\r\n-        <Container>\r\n-            <Row>\r\n-                <VoucherCard voucher={voucher} />\r\n-            </Row>\r\n-        </Container>\r\n-    );\r\n+    // ... (resto do código igual ao exemplo anterior)\r\n };\r\n \r\n export default VoucherPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740000557715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+'use client';\r\n+\r\n+import { useState, useEffect } from 'react';\r\n+import { Container, Row } from 'react-bootstrap';\r\n+import VoucherCard from './components/VoucherCard';\r\n+\r\n+const VoucherPage = () => {\r\n+    const [voucher, setVoucher] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+    const [error, setError] = useState(null);\r\n+\r\n+    useEffect(() => {\r\n+        const fetchVoucherData = async () => {\r\n+            try {\r\n+                // Simulação de dados da API (substitua pela chamada real quando a API estiver pronta)\r\n+                const mockVoucherData = {  // Dados estáticos - SIMULANDO a API\r\n+                    nome: \"Voucher de Desconto Exclusivo\",\r\n+                    descricao: \"20% de desconto em qualquer compra\",\r\n+                    codigo: \"ABCXYZ123\",\r\n+                    validade: \"31/12/2024\",\r\n+                };\r\n+\r\n+                // Simula uma chamada de API (substitua pela chamada real quando a API estiver pronta)\r\n+                const simulateApiCall = new Promise((resolve) => {\r\n+                    setTimeout(() => {\r\n+                        resolve({ voucher: mockVoucherData }); // SIMULANDO a resposta da API\r\n+                    }, 500); // Simula um atraso de 500ms\r\n+                });\r\n+\r\n+                // Aqui você usará o fetch real quando a API estiver pronta:\r\n+                /*\r\n+                const response = await fetch('/api/voucher');\r\n+                if (!response.ok) {\r\n+                    throw new Error(`Erro ao buscar voucher: ${response.status}`);\r\n+                }\r\n+                const data = await response.json();\r\n+                */\r\n+\r\n+                simulateApiCall.then(data => { // Quando a API estiver pronta, remova o simulateApiCall e use o fetch acima.\r\n+                    setVoucher(data.voucher);\r\n+                    setLoading(false);\r\n+                }).catch(err => {\r\n+                    setError(err);\r\n+                    setLoading(false);\r\n+                });\r\n+\r\n+\r\n+            } catch (err) {\r\n+                setError(err);\r\n+                console.error(\"Erro na requisição:\", err); // Mensagem de erro mais informativa\r\n+            } finally {\r\n+                setLoading(false);\r\n+            }\r\n+        };\r\n+\r\n+        fetchVoucherData();\r\n+    }, []);\r\n+\r\n+    if (loading) {\r\n+        return <div className=\"text-center\">Carregando voucher...</div>; // Centralizado\r\n+    }\r\n+\r\n+    if (error) {\r\n+        return <div className=\"text-center text-danger\">Erro ao carregar voucher: {error.message}</div>; // Mensagem de erro em vermelho\r\n+    }\r\n+\r\n+    if (!voucher) {\r\n+        return <div className=\"text-center\">Nenhum voucher encontrado.</div>; // Centralizado\r\n+    }\r\n+\r\n+    return (\r\n+        <Container>\r\n+            <Row className=\"justify-content-center\"> {/* Centraliza o card */}\r\n+                <VoucherCard voucher={voucher} />\r\n+            </Row>\r\n+        </Container>\r\n+    );\r\n+};\r\n+\r\n+export default VoucherPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740001257598,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,52 +69,12 @@\n     }\r\n \r\n     return (\r\n         <Container>\r\n-            <Row className=\"justify-content-center\"> {/* Centraliza o card */}\r\n-                <VoucherCard voucher={voucher} />\r\n-            </Row>\r\n-        </Container>\r\n+        <Row> {/* Removida a classe justify-content-center */}\r\n+            <VoucherCard voucher={voucher} />\r\n+        </Row>\r\n+    </Container>\r\n     );\r\n };\r\n \r\n-export default VoucherPage;\n-'use client';\r\n-\r\n-import { useState, useEffect } from 'react';\r\n-import { Container, Row } from 'react-bootstrap';\r\n-import VoucherCard from './components/VoucherCard';\r\n-\r\n-const VoucherPage = () => {\r\n-    const [voucher, setVoucher] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-    const [error, setError] = useState(null);\r\n-\r\n-    useEffect(() => {\r\n-        // Simulação de dados da API (substitua pelos dados reais quando a API estiver pronta)\r\n-        const mockVoucherData = {\r\n-            nome: \"Voucher de Desconto Exclusivo\",\r\n-            descricao: \"20% de desconto em qualquer compra\",\r\n-            codigo: \"ABCXYZ123\",\r\n-            validade: \"31/12/2024\",\r\n-        };\r\n-\r\n-        // Simula uma chamada de API (substitua pela chamada real quando a API estiver pronta)\r\n-        const simulateApiCall = new Promise((resolve) => {\r\n-            setTimeout(() => {\r\n-                resolve({ voucher: mockVoucherData });\r\n-            }, 500); // Simula um atraso de 500ms\r\n-        });\r\n-\r\n-        simulateApiCall.then(data => {\r\n-            setVoucher(data.voucher);\r\n-            setLoading(false);\r\n-        }).catch(err => {\r\n-            setError(err);\r\n-            setLoading(false);\r\n-        });\r\n-    }, []);\r\n-\r\n-    // ... (resto do código igual ao exemplo anterior)\r\n-};\r\n-\r\n export default VoucherPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740001308117,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n import { useState, useEffect } from 'react';\r\n import { Container, Row } from 'react-bootstrap';\r\n import VoucherCard from './components/VoucherCard';\r\n \r\n+\r\n const VoucherPage = () => {\r\n     const [voucher, setVoucher] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n     const [error, setError] = useState(null);\r\n@@ -68,13 +69,12 @@\n         return <div className=\"text-center\">Nenhum voucher encontrado.</div>; // Centralizado\r\n     }\r\n \r\n     return (\r\n-        <Container>\r\n+       \r\n         <Row> {/* Removida a classe justify-content-center */}\r\n             <VoucherCard voucher={voucher} />\r\n         </Row>\r\n-    </Container>\r\n     );\r\n };\r\n \r\n export default VoucherPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740001596155,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,10 +14,10 @@\n         const fetchVoucherData = async () => {\r\n             try {\r\n                 // Simulação de dados da API (substitua pela chamada real quando a API estiver pronta)\r\n                 const mockVoucherData = {  // Dados estáticos - SIMULANDO a API\r\n-                    nome: \"Voucher de Desconto Exclusivo\",\r\n-                    descricao: \"20% de desconto em qualquer compra\",\r\n+                    nome: \"Nextmark\",\r\n+                    descricao: \"20%\",\r\n                     codigo: \"ABCXYZ123\",\r\n                     validade: \"31/12/2024\",\r\n                 };\r\n \r\n"
                },
                {
                    "date": 1740001603791,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n             try {\r\n                 // Simulação de dados da API (substitua pela chamada real quando a API estiver pronta)\r\n                 const mockVoucherData = {  // Dados estáticos - SIMULANDO a API\r\n                     nome: \"Nextmark\",\r\n-                    descricao: \"20%\",\r\n-                    codigo: \"ABCXYZ123\",\r\n+                    descricao: \"20% de desconto\",\r\n+                    codigo: \"NXT20\",\r\n                     validade: \"31/12/2024\",\r\n                 };\r\n \r\n                 // Simula uma chamada de API (substitua pela chamada real quando a API estiver pronta)\r\n"
                },
                {
                    "date": 1740001620251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n         const fetchVoucherData = async () => {\r\n             try {\r\n                 // Simulação de dados da API (substitua pela chamada real quando a API estiver pronta)\r\n                 const mockVoucherData = {  // Dados estáticos - SIMULANDO a API\r\n-                    nome: \"Nextmark\",\r\n+                    nome: \"Nextmark Comunicação\",\r\n                     descricao: \"20% de desconto\",\r\n                     codigo: \"NXT20\",\r\n                     validade: \"31/12/2024\",\r\n                 };\r\n"
                }
            ],
            "date": 1739999804440,
            "name": "Commit-0",
            "content": "// ... outras importações\r\nimport VoucherCard from './components/VoucherCard';\r\n\r\n// ... dentro do seu componente de página\r\nconst voucher = { // Dados do voucher (substitua pelos dados reais)\r\n    nome: \"Voucher de Desconto Exclusivo\",\r\n    descricao: \"20% de desconto em qualquer compra\",\r\n    codigo: \"ABCXYZ123\",\r\n    validade: \"31/12/2024\",\r\n};\r\n\r\n// ... no seu JSX\r\n<VoucherCard voucher={voucher} />"
        }
    ]
}