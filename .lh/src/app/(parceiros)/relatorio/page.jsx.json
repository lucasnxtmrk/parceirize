{
    "sourceFile": "src/app/(parceiros)/relatorio/page.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 7,
            "patches": [
                {
                    "date": 1740002002736,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740002064562,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,72 +0,0 @@\n-'use client';\r\n-\r\n-import { useState, useEffect } from 'react';\r\n-import { Container, Row } from 'react-bootstrap';\r\n-import { Grid } from \"gridjs-react\";\r\n-import \"gridjs/styles/gridjs.css\"; // Importe os estilos do Grid.js\r\n-\r\n-const columns = [ // Definição das colunas da tabela\r\n-    { name: 'Código', data: 'codigo' },\r\n-    { name: 'Cliente', data: 'cliente' },\r\n-    { name: 'Data de Utilização', data: 'dataUtilizacao' },\r\n-    { name: 'Valor do Desconto', data: 'valorDesconto' },\r\n-];\r\n-\r\n-const VoucherReportPage = () => {\r\n-    const [vouchersUtilizados, setVouchersUtilizados] = useState([]);\r\n-    const [loading, setLoading] = useState(true);\r\n-    const [error, setError] = useState(null);\r\n-\r\n-    useEffect(() => {\r\n-        // Simulação de dados da API (substitua pelos dados reais quando a API estiver pronta)\r\n-        const mockVouchersUtilizados = [\r\n-            { codigo: 'XYZ123', cliente: 'João Silva', dataUtilizacao: '10/05/2024 10:00', valorDesconto: 'R$ 10,00' },\r\n-            { codigo: 'ABC456', cliente: 'Maria Souza', dataUtilizacao: '12/05/2024 15:30', valorDesconto: 'R$ 5,00' },\r\n-            // ... mais dados\r\n-        ];\r\n-\r\n-        // Simula uma chamada de API (substitua pela chamada real quando a API estiver pronta)\r\n-        const simulateApiCall = new Promise((resolve) => {\r\n-            setTimeout(() => {\r\n-                resolve({ vouchers: mockVouchersUtilizados });\r\n-            }, 500);\r\n-        });\r\n-\r\n-        simulateApiCall.then(data => {\r\n-            setVouchersUtilizados(data.vouchers);\r\n-            setLoading(false);\r\n-        }).catch(err => {\r\n-            setError(err);\r\n-            setLoading(false);\r\n-        });\r\n-    }, []);\r\n-\r\n-    if (loading) {\r\n-        return <div className=\"text-center\">Carregando dados...</div>;\r\n-    }\r\n-\r\n-    if (error) {\r\n-        return <div className=\"text-center text-danger\">Erro ao carregar dados: {error.message}</div>;\r\n-    }\r\n-\r\n-    return (\r\n-        <Container>\r\n-            <Row>\r\n-                <Col xs={12}>\r\n-                    <Grid\r\n-                        data={vouchersUtilizados}\r\n-                        columns={columns}\r\n-                        search={true} // Adiciona a funcionalidade de pesquisa\r\n-                        pagination={{\r\n-                            enabled: true, // Adiciona paginação\r\n-                            limit: 10, // Define o número de linhas por página\r\n-                            summary: true // Exibe um resumo da paginação\r\n-                        }}\r\n-                    />\r\n-                </Col>\r\n-            </Row>\r\n-        </Container>\r\n-    );\r\n-};\r\n-\r\n-export default VoucherReportPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740002182532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,102 @@\n+// Componente NestingTable2.jsx (adaptado)\r\n+import { Button, Col, FormCheck, Row, Table } from 'react-bootstrap';\r\n+import clsx from 'clsx';\r\n+import Link from 'next/link';\r\n+import ComponentContainerCard from '@/components/ComponentContainerCard';\r\n+import UIExamplesList from '@/components/UIExamplesList';\r\n+import IconifyIcon from '@/components/wrappers/IconifyIcon';\r\n+import { colorVariants, currency } from '@/context/constants';\r\n+import { toSentenceCase } from '@/utils/change-casing';\r\n+//import { extendedTableData, tableData } from './data'; // Não precisamos mais desses dados estáticos\r\n+import avatar6 from '@/assets/images/users/avatar-6.jpg';\r\n+import avatar7 from '@/assets/images/users/avatar-7.jpg';\r\n+import avatar8 from '@/assets/images/users/avatar-8.jpg';\r\n+import Image from 'next/image';\r\n+import PageTitle from '@/components/PageTitle';\r\n+\r\n+const NestingTable2 = ({ vouchersUtilizados }) => { // Recebe os dados como props\r\n+    return (\r\n+        <ComponentContainerCard id=\"nesting1\" title=\"Vouchers Utilizados\" description=\"Lista de vouchers utilizados\">\r\n+            <div className=\"table-responsive\">\r\n+                <table className=\"table table-bordered table-striped table-centered\">\r\n+                    <thead>\r\n+                        <tr>\r\n+                            <th scope=\"col\">Código do Voucher</th>\r\n+                            <th scope=\"col\">Cliente</th>\r\n+                            <th scope=\"col\">Data de Utilização</th>\r\n+                            <th scope=\"col\">Valor do Desconto</th>\r\n+                        </tr>\r\n+                    </thead>\r\n+                    <tbody>\r\n+                        {vouchersUtilizados.map((voucher) => ( // Renderiza os dados dinamicamente\r\n+                            <tr key={voucher.codigo}>\r\n+                                <td>{voucher.codigo}</td>\r\n+                                <td>{voucher.cliente}</td>\r\n+                                <td>{voucher.dataUtilizacao}</td>\r\n+                                <td>{voucher.valorDesconto}</td>\r\n+                            </tr>\r\n+                        ))}\r\n+                    </tbody>\r\n+                </table>\r\n+            </div>\r\n+        </ComponentContainerCard>\r\n+    );\r\n+};\r\n+\r\n+export default NestingTable2;\r\n+\r\n+\r\n+// Página de relatório (ex: report.jsx)\r\n+'use client';\r\n+\r\n+import { useState, useEffect } from 'react';\r\n+import { Container, Row } from 'react-bootstrap';\r\n+import NestingTable2 from './components/NestingTable2'; // Importe o componente\r\n+\r\n+const VoucherReportPage = () => {\r\n+    const [vouchersUtilizados, setVouchersUtilizados] = useState([]);\r\n+    const [loading, setLoading] = useState(true);\r\n+    const [error, setError] = useState(null);\r\n+\r\n+    useEffect(() => {\r\n+        // Simulação de dados da API (substitua pelos dados reais quando a API estiver pronta)\r\n+        const mockVouchersUtilizados = [\r\n+            { codigo: 'XYZ123', cliente: 'João Silva', dataUtilizacao: '10/05/2024 10:00', valorDesconto: 'R$ 10,00' },\r\n+            { codigo: 'ABC456', cliente: 'Maria Souza', dataUtilizacao: '12/05/2024 15:30', valorDesconto: 'R$ 5,00' },\r\n+            // ... mais dados\r\n+        ];\r\n+\r\n+        // Simula uma chamada de API (substitua pela chamada real quando a API estiver pronta)\r\n+        const simulateApiCall = new Promise((resolve) => {\r\n+            setTimeout(() => {\r\n+                resolve({ vouchers: mockVouchersUtilizados });\r\n+            }, 500);\r\n+        });\r\n+\r\n+        simulateApiCall.then(data => {\r\n+            setVouchersUtilizados(data.vouchers);\r\n+            setLoading(false);\r\n+        }).catch(err => {\r\n+            setError(err);\r\n+            setLoading(false);\r\n+        });\r\n+    }, []);\r\n+\r\n+    if (loading) {\r\n+        return <div className=\"text-center\">Carregando dados...</div>;\r\n+    }\r\n+\r\n+    if (error) {\r\n+        return <div className=\"text-center text-danger\">Erro ao carregar dados: {error.message}</div>;\r\n+    }\r\n+\r\n+    return (\r\n+        <Container>\r\n+            <Row>\r\n+                <NestingTable2 vouchersUtilizados={vouchersUtilizados} /> {/* Passe os dados para o componente */}\r\n+            </Row>\r\n+        </Container>\r\n+    );\r\n+};\r\n+\r\n+export default VoucherReportPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740002231242,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,4 @@\n-// Componente NestingTable2.jsx (adaptado)\r\n-import { Button, Col, FormCheck, Row, Table } from 'react-bootstrap';\r\n-import clsx from 'clsx';\r\n-import Link from 'next/link';\r\n-import ComponentContainerCard from '@/components/ComponentContainerCard';\r\n-import UIExamplesList from '@/components/UIExamplesList';\r\n-import IconifyIcon from '@/components/wrappers/IconifyIcon';\r\n-import { colorVariants, currency } from '@/context/constants';\r\n-import { toSentenceCase } from '@/utils/change-casing';\r\n-//import { extendedTableData, tableData } from './data'; // Não precisamos mais desses dados estáticos\r\n-import avatar6 from '@/assets/images/users/avatar-6.jpg';\r\n-import avatar7 from '@/assets/images/users/avatar-7.jpg';\r\n-import avatar8 from '@/assets/images/users/avatar-8.jpg';\r\n-import Image from 'next/image';\r\n-import PageTitle from '@/components/PageTitle';\r\n-\r\n-const NestingTable2 = ({ vouchersUtilizados }) => { // Recebe os dados como props\r\n-    return (\r\n-        <ComponentContainerCard id=\"nesting1\" title=\"Vouchers Utilizados\" description=\"Lista de vouchers utilizados\">\r\n-            <div className=\"table-responsive\">\r\n-                <table className=\"table table-bordered table-striped table-centered\">\r\n-                    <thead>\r\n-                        <tr>\r\n-                            <th scope=\"col\">Código do Voucher</th>\r\n-                            <th scope=\"col\">Cliente</th>\r\n-                            <th scope=\"col\">Data de Utilização</th>\r\n-                            <th scope=\"col\">Valor do Desconto</th>\r\n-                        </tr>\r\n-                    </thead>\r\n-                    <tbody>\r\n-                        {vouchersUtilizados.map((voucher) => ( // Renderiza os dados dinamicamente\r\n-                            <tr key={voucher.codigo}>\r\n-                                <td>{voucher.codigo}</td>\r\n-                                <td>{voucher.cliente}</td>\r\n-                                <td>{voucher.dataUtilizacao}</td>\r\n-                                <td>{voucher.valorDesconto}</td>\r\n-                            </tr>\r\n-                        ))}\r\n-                    </tbody>\r\n-                </table>\r\n-            </div>\r\n-        </ComponentContainerCard>\r\n-    );\r\n-};\r\n-\r\n-export default NestingTable2;\r\n-\r\n-\r\n-// Página de relatório (ex: report.jsx)\r\n 'use client';\r\n \r\n import { useState, useEffect } from 'react';\r\n import { Container, Row } from 'react-bootstrap';\r\n"
                },
                {
                    "date": 1740002255227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,13 +41,13 @@\n         return <div className=\"text-center text-danger\">Erro ao carregar dados: {error.message}</div>;\r\n     }\r\n \r\n     return (\r\n-        <Container>\r\n+        \r\n             <Row>\r\n                 <NestingTable2 vouchersUtilizados={vouchersUtilizados} /> {/* Passe os dados para o componente */}\r\n             </Row>\r\n-        </Container>\r\n+        \r\n     );\r\n };\r\n \r\n export default VoucherReportPage;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740049004880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,10 @@\n \r\n     useEffect(() => {\r\n         // Simulação de dados da API (substitua pelos dados reais quando a API estiver pronta)\r\n         const mockVouchersUtilizados = [\r\n-            { codigo: 'XYZ123', cliente: 'João Silva', dataUtilizacao: '10/05/2024 10:00', valorDesconto: 'R$ 10,00' },\r\n-            { codigo: 'ABC456', cliente: 'Maria Souza', dataUtilizacao: '12/05/2024 15:30', valorDesconto: 'R$ 5,00' },\r\n+            { codigo: 'NEXT20', cliente: 'João Silva', dataUtilizacao: '10/05/2024 10:00', valorDesconto: '20%' },\r\n+            { codigo: 'NEXT20', cliente: 'Maria Souza', dataUtilizacao: '12/05/2024 15:30', valorDesconto: '20%' },\r\n             // ... mais dados\r\n         ];\r\n \r\n         // Simula uma chamada de API (substitua pela chamada real quando a API estiver pronta)\r\n"
                },
                {
                    "date": 1740049025166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,10 @@\n \r\n     useEffect(() => {\r\n         // Simulação de dados da API (substitua pelos dados reais quando a API estiver pronta)\r\n         const mockVouchersUtilizados = [\r\n-            { codigo: 'NEXT20', cliente: 'João Silva', dataUtilizacao: '10/05/2024 10:00', valorDesconto: '20%' },\r\n-            { codigo: 'NEXT20', cliente: 'Maria Souza', dataUtilizacao: '12/05/2024 15:30', valorDesconto: '20%' },\r\n+            { codigo: 'NXT20', cliente: 'João Silva', dataUtilizacao: '10/05/2024 10:00', valorDesconto: '20%' },\r\n+            { codigo: 'NXT20', cliente: 'Maria Souza', dataUtilizacao: '12/05/2024 15:30', valorDesconto: '20%' },\r\n             // ... mais dados\r\n         ];\r\n \r\n         // Simula uma chamada de API (substitua pela chamada real quando a API estiver pronta)\r\n"
                },
                {
                    "date": 1740336721166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,35 @@\n-'use client';\r\n+\"use client\";\r\n \r\n import { useState, useEffect } from 'react';\r\n-import { Container, Row } from 'react-bootstrap';\r\n-import NestingTable2 from './components/NestingTable2'; // Importe o componente\r\n+import { Row } from 'react-bootstrap';\r\n+import NestingTable2 from './components/NestingTable2';\r\n \r\n const VoucherReportPage = () => {\r\n     const [vouchersUtilizados, setVouchersUtilizados] = useState([]);\r\n     const [loading, setLoading] = useState(true);\r\n     const [error, setError] = useState(null);\r\n \r\n     useEffect(() => {\r\n-        // Simulação de dados da API (substitua pelos dados reais quando a API estiver pronta)\r\n-        const mockVouchersUtilizados = [\r\n-            { codigo: 'NXT20', cliente: 'João Silva', dataUtilizacao: '10/05/2024 10:00', valorDesconto: '20%' },\r\n-            { codigo: 'NXT20', cliente: 'Maria Souza', dataUtilizacao: '12/05/2024 15:30', valorDesconto: '20%' },\r\n-            // ... mais dados\r\n-        ];\r\n+        const fetchVouchersUtilizados = async () => {\r\n+            try {\r\n+                const response = await fetch('/api/parceiro/vouchers-utilizados');\r\n \r\n-        // Simula uma chamada de API (substitua pela chamada real quando a API estiver pronta)\r\n-        const simulateApiCall = new Promise((resolve) => {\r\n-            setTimeout(() => {\r\n-                resolve({ vouchers: mockVouchersUtilizados });\r\n-            }, 500);\r\n-        });\r\n+                if (!response.ok) {\r\n+                    throw new Error(`Erro ao buscar vouchers utilizados: ${response.status}`);\r\n+                }\r\n \r\n-        simulateApiCall.then(data => {\r\n-            setVouchersUtilizados(data.vouchers);\r\n-            setLoading(false);\r\n-        }).catch(err => {\r\n-            setError(err);\r\n-            setLoading(false);\r\n-        });\r\n+                const data = await response.json();\r\n+                setVouchersUtilizados(data);\r\n+                setLoading(false);\r\n+            } catch (err) {\r\n+                console.error(\"❌ Erro na requisição:\", err);\r\n+                setError(err);\r\n+                setLoading(false);\r\n+            }\r\n+        };\r\n+\r\n+        fetchVouchersUtilizados();\r\n     }, []);\r\n \r\n     if (loading) {\r\n         return <div className=\"text-center\">Carregando dados...</div>;\r\n@@ -41,13 +39,11 @@\n         return <div className=\"text-center text-danger\">Erro ao carregar dados: {error.message}</div>;\r\n     }\r\n \r\n     return (\r\n-        \r\n-            <Row>\r\n-                <NestingTable2 vouchersUtilizados={vouchersUtilizados} /> {/* Passe os dados para o componente */}\r\n-            </Row>\r\n-        \r\n+        <Row>\r\n+            <NestingTable2 vouchersUtilizados={vouchersUtilizados} />\r\n+        </Row>\r\n     );\r\n\\ No newline at end of file\n };\r\n \r\n-export default VoucherReportPage;\n+export default VoucherReportPage;\r\n"
                }
            ],
            "date": 1740002002736,
            "name": "Commit-0",
            "content": "'use client';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport { Grid } from \"gridjs-react\";\r\nimport \"gridjs/styles/gridjs.css\"; // Importe os estilos do Grid.js\r\n\r\nconst columns = [ // Definição das colunas da tabela\r\n    { name: 'Código', data: 'codigo' },\r\n    { name: 'Cliente', data: 'cliente' },\r\n    { name: 'Data de Utilização', data: 'dataUtilizacao' },\r\n    { name: 'Valor do Desconto', data: 'valorDesconto' },\r\n];\r\n\r\nconst VoucherReportPage = () => {\r\n    const [vouchersUtilizados, setVouchersUtilizados] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Simulação de dados da API (substitua pelos dados reais quando a API estiver pronta)\r\n        const mockVouchersUtilizados = [\r\n            { codigo: 'XYZ123', cliente: 'João Silva', dataUtilizacao: '10/05/2024 10:00', valorDesconto: 'R$ 10,00' },\r\n            { codigo: 'ABC456', cliente: 'Maria Souza', dataUtilizacao: '12/05/2024 15:30', valorDesconto: 'R$ 5,00' },\r\n            // ... mais dados\r\n        ];\r\n\r\n        // Simula uma chamada de API (substitua pela chamada real quando a API estiver pronta)\r\n        const simulateApiCall = new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve({ vouchers: mockVouchersUtilizados });\r\n            }, 500);\r\n        });\r\n\r\n        simulateApiCall.then(data => {\r\n            setVouchersUtilizados(data.vouchers);\r\n            setLoading(false);\r\n        }).catch(err => {\r\n            setError(err);\r\n            setLoading(false);\r\n        });\r\n    }, []);\r\n\r\n    if (loading) {\r\n        return <div className=\"text-center\">Carregando dados...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"text-center text-danger\">Erro ao carregar dados: {error.message}</div>;\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col xs={12}>\r\n                    <Grid\r\n                        data={vouchersUtilizados}\r\n                        columns={columns}\r\n                        search={true} // Adiciona a funcionalidade de pesquisa\r\n                        pagination={{\r\n                            enabled: true, // Adiciona paginação\r\n                            limit: 10, // Define o número de linhas por página\r\n                            summary: true // Exibe um resumo da paginação\r\n                        }}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default VoucherReportPage;"
        }
    ]
}