{
    "sourceFile": "src/components/from/ChoicesFormInput.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1739449625360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1739449625360,
            "name": "Commit-0",
            "content": "'use client';\n\nimport Choices from 'choices.js';\nimport { useEffect, useRef } from 'react';\nconst ChoicesFormInput = ({\n  children,\n  multiple,\n  className,\n  onChange,\n  allowInput,\n  options,\n  ...props\n}) => {\n  const choicesRef = useRef(null);\n  useEffect(() => {\n    if (choicesRef.current) {\n      const choices = new Choices(choicesRef.current, {\n        ...options,\n        placeholder: true,\n        allowHTML: true,\n        shouldSort: false\n      });\n      choices.passedElement.element.addEventListener('change', e => {\n        if (!(e.target instanceof HTMLSelectElement)) return;\n        if (onChange) {\n          onChange(e.target.value);\n        }\n      });\n    }\n  }, [choicesRef]);\n  return allowInput ? <input ref={choicesRef} multiple={multiple} className={className} {...props} /> : <select ref={choicesRef} multiple={multiple} className={className} {...props}>\n      {children}\n    </select>;\n};\nexport default ChoicesFormInput;"
        }
    ]
}