{
    "sourceFile": "src/app/api/parceiro/perfil/route.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1740336923953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1740336923953,
            "name": "Commit-0",
            "content": "import { Pool } from \"pg\";\r\nimport { getServerSession } from \"next-auth\";\r\nimport { options } from \"@/app/api/auth/[...nextauth]/options\"; // Caminho do NextAuth\r\n\r\nconst pool = new Pool({\r\n  connectionString: process.env.DATABASE_URL,\r\n});\r\n\r\n// ‚úÖ BUSCAR OS DADOS DO PARCEIRO\r\nexport async function GET(req) {\r\n  try {\r\n    const session = await getServerSession(options);\r\n\r\n    if (!session || session.user.role !== \"parceiro\") {\r\n      return new Response(JSON.stringify({ error: \"Acesso negado\" }), { status: 403 });\r\n    }\r\n\r\n    console.log(\"üì° Buscando perfil do parceiro:\", session.user.email);\r\n\r\n    // Buscar os dados do parceiro\r\n    const query = `\r\n      SELECT id, nome_empresa, email, foto, nicho\r\n      FROM parceiros\r\n      WHERE email = $1\r\n    `;\r\n    const result = await pool.query(query, [session.user.email]);\r\n\r\n    if (result.rows.length === 0) {\r\n      return new Response(JSON.stringify({ error: \"Parceiro n√£o encontrado.\" }), { status: 404 });\r\n    }\r\n\r\n    return new Response(JSON.stringify(result.rows[0]), {\r\n      status: 200,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error(\"‚ùå Erro ao buscar perfil do parceiro:\", error);\r\n    return new Response(JSON.stringify({ error: \"Erro interno ao buscar perfil.\" }), { status: 500 });\r\n  }\r\n}\r\n\r\n// ‚úÖ ATUALIZAR OS DADOS DO PARCEIRO\r\nexport async function PUT(req) {\r\n  try {\r\n    const session = await getServerSession(options);\r\n\r\n    if (!session || session.user.role !== \"parceiro\") {\r\n      return new Response(JSON.stringify({ error: \"Acesso negado\" }), { status: 403 });\r\n    }\r\n\r\n    const { nome_empresa, email, foto, nicho } = await req.json();\r\n\r\n    console.log(\"üì° Atualizando perfil do parceiro:\", session.user.email);\r\n\r\n    // Atualizar os dados do parceiro no banco\r\n    const updateQuery = `\r\n      UPDATE parceiros\r\n      SET nome_empresa = $1, email = $2, foto = $3, nicho = $4\r\n      WHERE email = $5\r\n      RETURNING id, nome_empresa, email, foto, nicho\r\n    `;\r\n\r\n    const result = await pool.query(updateQuery, [nome_empresa, email, foto, nicho, session.user.email]);\r\n\r\n    if (result.rows.length === 0) {\r\n      return new Response(JSON.stringify({ error: \"Erro ao atualizar perfil.\" }), { status: 400 });\r\n    }\r\n\r\n    return new Response(JSON.stringify({ success: true, parceiro: result.rows[0] }), {\r\n      status: 200,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error(\"‚ùå Erro ao atualizar perfil do parceiro:\", error);\r\n    return new Response(JSON.stringify({ error: \"Erro interno ao atualizar perfil.\" }), { status: 500 });\r\n  }\r\n}\r\n"
        }
    ]
}