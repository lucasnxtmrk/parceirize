{
    "sourceFile": "src/app/api/parceiro/vouchers-utilizados/route.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1740336699149,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1741207827090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { Pool } from \"pg\";\r\n import { getServerSession } from \"next-auth\";\r\n-import { options } from \"@/app/api/auth/[...nextauth]/options\"; // Caminho correto do NextAuth\r\n+import { options } from \"@/app/api/auth/[...nextauth]/options\"; // Configura√ß√£o do NextAuth\r\n \r\n const pool = new Pool({\r\n   connectionString: process.env.DATABASE_URL,\r\n });\r\n@@ -42,9 +42,13 @@\n \r\n     const result = await pool.query(query, [parceiro.id]);\r\n \r\n     if (result.rows.length === 0) {\r\n-      return new Response(JSON.stringify({ error: \"Nenhum voucher utilizado encontrado.\" }), { status: 404 });\r\n+      console.log(\"‚ö†Ô∏è Nenhum voucher utilizado para este parceiro.\");\r\n+      return new Response(JSON.stringify([]), { \r\n+        status: 200, \r\n+        headers: { \"Content-Type\": \"application/json\" } \r\n+      });\r\n     }\r\n \r\n     // Formatar resposta\r\n     const vouchersUtilizados = result.rows.map((row) => ({\r\n"
                },
                {
                    "date": 1741286526296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { Pool } from \"pg\";\r\n import { getServerSession } from \"next-auth\";\r\n-import { options } from \"@/app/api/auth/[...nextauth]/options\"; // Configura√ß√£o do NextAuth\r\n+import { options } from \"@/app/api/auth/[...nextauth]/options\"]; // Configura√ß√£o do NextAuth\r\n \r\n const pool = new Pool({\r\n   connectionString: process.env.DATABASE_URL,\r\n });\r\n@@ -23,11 +23,11 @@\n     if (parceiroResult.rows.length === 0) {\r\n       return new Response(JSON.stringify({ error: \"Parceiro n√£o encontrado\" }), { status: 404 });\r\n     }\r\n \r\n-    const parceiro = parceiroResult.rows[0];\r\n+    const parceiroId = parceiroResult.rows[0].id;\r\n \r\n-    // Buscar os vouchers utilizados desse parceiro\r\n+    // Buscar os vouchers utilizados para este parceiro\r\n     const query = `\r\n       SELECT \r\n         v.codigo AS voucher_codigo, \r\n         c.nome || ' ' || c.sobrenome AS cliente_nome,\r\n@@ -39,9 +39,9 @@\n       WHERE v.parceiro_id = $1\r\n       ORDER BY vu.data_utilizacao DESC\r\n     `;\r\n \r\n-    const result = await pool.query(query, [parceiro.id]);\r\n+    const result = await pool.query(query, [parceiroId]);\r\n \r\n     if (result.rows.length === 0) {\r\n       console.log(\"‚ö†Ô∏è Nenhum voucher utilizado para este parceiro.\");\r\n       return new Response(JSON.stringify([]), { \r\n"
                },
                {
                    "date": 1741286585349,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { Pool } from \"pg\";\r\n import { getServerSession } from \"next-auth\";\r\n-import { options } from \"@/app/api/auth/[...nextauth]/options\"]; // Configura√ß√£o do NextAuth\r\n+import { options } from \"@/app/api/auth/[...nextauth]/options\"; // Configura√ß√£o do NextAuth\r\n \r\n const pool = new Pool({\r\n   connectionString: process.env.DATABASE_URL,\r\n });\r\n@@ -23,11 +23,11 @@\n     if (parceiroResult.rows.length === 0) {\r\n       return new Response(JSON.stringify({ error: \"Parceiro n√£o encontrado\" }), { status: 404 });\r\n     }\r\n \r\n-    const parceiroId = parceiroResult.rows[0].id;\r\n+    const parceiro = parceiroResult.rows[0];\r\n \r\n-    // Buscar os vouchers utilizados para este parceiro\r\n+    // Buscar os vouchers utilizados desse parceiro\r\n     const query = `\r\n       SELECT \r\n         v.codigo AS voucher_codigo, \r\n         c.nome || ' ' || c.sobrenome AS cliente_nome,\r\n@@ -39,9 +39,9 @@\n       WHERE v.parceiro_id = $1\r\n       ORDER BY vu.data_utilizacao DESC\r\n     `;\r\n \r\n-    const result = await pool.query(query, [parceiroId]);\r\n+    const result = await pool.query(query, [parceiro.id]);\r\n \r\n     if (result.rows.length === 0) {\r\n       console.log(\"‚ö†Ô∏è Nenhum voucher utilizado para este parceiro.\");\r\n       return new Response(JSON.stringify([]), { \r\n"
                }
            ],
            "date": 1740336699149,
            "name": "Commit-0",
            "content": "import { Pool } from \"pg\";\r\nimport { getServerSession } from \"next-auth\";\r\nimport { options } from \"@/app/api/auth/[...nextauth]/options\"; // Caminho correto do NextAuth\r\n\r\nconst pool = new Pool({\r\n  connectionString: process.env.DATABASE_URL,\r\n});\r\n\r\nexport async function GET(req) {\r\n  try {\r\n    const session = await getServerSession(options);\r\n\r\n    if (!session || session.user.role !== \"parceiro\") {\r\n      return new Response(JSON.stringify({ error: \"Acesso negado\" }), { status: 403 });\r\n    }\r\n\r\n    console.log(\"üì° Buscando vouchers utilizados pelo parceiro:\", session.user.email);\r\n\r\n    // Buscar o ID do parceiro logado\r\n    const parceiroQuery = `SELECT id FROM parceiros WHERE email = $1`;\r\n    const parceiroResult = await pool.query(parceiroQuery, [session.user.email]);\r\n\r\n    if (parceiroResult.rows.length === 0) {\r\n      return new Response(JSON.stringify({ error: \"Parceiro n√£o encontrado\" }), { status: 404 });\r\n    }\r\n\r\n    const parceiro = parceiroResult.rows[0];\r\n\r\n    // Buscar os vouchers utilizados desse parceiro\r\n    const query = `\r\n      SELECT \r\n        v.codigo AS voucher_codigo, \r\n        c.nome || ' ' || c.sobrenome AS cliente_nome,\r\n        vu.data_utilizacao AS data_utilizacao,\r\n        vu.desconto AS desconto\r\n      FROM voucher_utilizados vu\r\n      INNER JOIN vouchers v ON vu.voucher_id = v.id\r\n      INNER JOIN clientes c ON vu.cliente_id = c.id\r\n      WHERE v.parceiro_id = $1\r\n      ORDER BY vu.data_utilizacao DESC\r\n    `;\r\n\r\n    const result = await pool.query(query, [parceiro.id]);\r\n\r\n    if (result.rows.length === 0) {\r\n      return new Response(JSON.stringify({ error: \"Nenhum voucher utilizado encontrado.\" }), { status: 404 });\r\n    }\r\n\r\n    // Formatar resposta\r\n    const vouchersUtilizados = result.rows.map((row) => ({\r\n      codigo: row.voucher_codigo,\r\n      cliente: row.cliente_nome,\r\n      dataUtilizacao: new Date(row.data_utilizacao).toLocaleString(\"pt-BR\"),\r\n      valorDesconto: `${row.desconto}%`,\r\n    }));\r\n\r\n    return new Response(JSON.stringify(vouchersUtilizados), {\r\n      status: 200,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error(\"‚ùå Erro ao buscar vouchers utilizados:\", error);\r\n    return new Response(JSON.stringify({ error: \"Erro interno ao buscar vouchers utilizados.\" }), { status: 500 });\r\n  }\r\n}\r\n"
        }
    ]
}