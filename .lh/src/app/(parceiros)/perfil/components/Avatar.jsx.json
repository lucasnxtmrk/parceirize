{
    "sourceFile": "src/app/(parceiros)/perfil/components/Avatar.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1740049995479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740050325068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import { useState } from 'react';\r\n import { Image } from 'react-bootstrap';\r\n+import { IconifyIcon } from '@iconify/react';\r\n \r\n+\r\n const Avatar = ({ src, alt }) => {\r\n   const [image, setImage] = useState(src);\r\n   const [isEditing, setIsEditing] = useState(false);\r\n \r\n"
                },
                {
                    "date": 1740050598964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n import { useState } from 'react';\r\n import { Image } from 'react-bootstrap';\r\n-import { IconifyIcon } from '@iconify/react';\r\n+import IconifyIcon from '@/components/wrappers/IconifyIcon';\r\n \r\n-\r\n const Avatar = ({ src, alt }) => {\r\n   const [image, setImage] = useState(src);\r\n   const [isEditing, setIsEditing] = useState(false);\r\n \r\n"
                },
                {
                    "date": 1740050871147,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,78 +2,92 @@\n import { Image } from 'react-bootstrap';\r\n import IconifyIcon from '@/components/wrappers/IconifyIcon';\r\n \r\n const Avatar = ({ src, alt }) => {\r\n-  const [image, setImage] = useState(src);\r\n-  const [isEditing, setIsEditing] = useState(false);\r\n+    const [image, setImage] = useState(src);\r\n+    const [isEditing, setIsEditing] = useState(false);\r\n \r\n-  const handleEdit = () => {\r\n-    setIsEditing(true);\r\n-  };\r\n+    const handleEdit = () => {\r\n+        setIsEditing(true);\r\n+    };\r\n \r\n-  const handleImageChange = (event) => {\r\n-    const file = event.target.files[0];\r\n-    const reader = new FileReader();\r\n+    const handleImageChange = (event) => {\r\n+        const file = event.target.files[0];\r\n+        const reader = new FileReader();\r\n \r\n-    reader.onloadend = () => {\r\n-      setImage(reader.result);\r\n-      setIsEditing(false);\r\n+        reader.onloadend = () => {\r\n+            setImage(reader.result);\r\n+            setIsEditing(false);\r\n+        };\r\n+\r\n+        if (file) {\r\n+            reader.readAsDataURL(file);\r\n+        }\r\n     };\r\n \r\n-    if (file) {\r\n-      reader.readAsDataURL(file);\r\n-    }\r\n-  };\r\n-\r\n-  return (\r\n-    <div\r\n-      style={{\r\n-        width: '120px',\r\n-        height: '120px',\r\n-        borderRadius: '50%',\r\n-        overflow: 'hidden',\r\n-        position: 'relative',\r\n-        cursor: 'pointer',\r\n-      }}\r\n-      onMouseEnter={handleEdit}\r\n-      onMouseLeave={() => setIsEditing(false)}\r\n-    >\r\n-      <Image\r\n-        src={image}\r\n-        alt={alt}\r\n-        style={{\r\n-          width: '100%',\r\n-          height: '100%',\r\n-          objectFit: 'cover',\r\n-        }}\r\n-      />\r\n-      {isEditing && (\r\n+    return (\r\n         <div\r\n-          style={{\r\n-            position: 'absolute',\r\n-            top: 0,\r\n-            left: 0,\r\n-            width: '100%',\r\n-            height: '100%',\r\n-            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n-            display: 'flex',\r\n-            alignItems: 'center',\r\n-            justifyContent: 'center',\r\n-          }}\r\n+            style={{\r\n+                width: '120px',\r\n+                height: '120px',\r\n+                borderRadius: '50%',\r\n+                overflow: 'hidden',\r\n+                position: 'relative',\r\n+                cursor: 'pointer',\r\n+                transition: 'opacity 0.3s ease', // Adiciona transição para suavizar o hover\r\n+            }}\r\n+            onMouseEnter={handleEdit}\r\n+            onMouseLeave={() => setIsEditing(false)}\r\n         >\r\n-          <label htmlFor=\"imageInput\" style={{ cursor: 'pointer' }}>\r\n-            <IconifyIcon icon=\"bx:camera\" color=\"white\" />\r\n-          </label>\r\n-          <input\r\n-            type=\"file\"\r\n-            id=\"imageInput\"\r\n-            accept=\"image/*\"\r\n-            style={{ display: 'none' }}\r\n-            onChange={handleImageChange}\r\n-          />\r\n+            <Image\r\n+                src={image}\r\n+                alt={alt}\r\n+                style={{\r\n+                    width: '100%',\r\n+                    height: '100%',\r\n+                    objectFit: 'cover',\r\n+                    transition: 'transform 0.3s ease', // Transição na imagem ao editar\r\n+                }}\r\n+            />\r\n+            {isEditing && (\r\n+                <div\r\n+                    style={{\r\n+                        position: 'absolute',\r\n+                        top: 0,\r\n+                        left: 0,\r\n+                        width: '100%',\r\n+                        height: '100%',\r\n+                        backgroundColor: 'rgba(0, 0, 0, 0)', // Começa transparente\r\n+                        display: 'flex',\r\n+                        alignItems: 'center',\r\n+                        justifyContent: 'center',\r\n+                        transition: 'background-color 0.3s ease', // Transição suave do background\r\n+                    }}\r\n+                >\r\n+                    <div // Div extra para o conteúdo do overlay\r\n+                        style={{\r\n+                            opacity: 0, // Começa invisível\r\n+                            transition: 'opacity 0.3s ease', // Transição suave da opacidade\r\n+                            display: 'flex',\r\n+                            flexDirection: 'column', // Alinha verticalmente\r\n+                            alignItems: 'center',\r\n+                        }}\r\n+                    >\r\n+                        <label htmlFor=\"imageInput\" style={{ cursor: 'pointer' }}>\r\n+                            <IconifyIcon icon=\"bx:camera\" color=\"white\" size=\"2em\" /> {/* Ícone maior */}\r\n+                        </label>\r\n+                        <input\r\n+                            type=\"file\"\r\n+                            id=\"imageInput\"\r\n+                            accept=\"image/*\"\r\n+                            style={{ display: 'none' }}\r\n+                            onChange={handleImageChange}\r\n+                        />\r\n+                         <span style={{color: 'white', marginTop: '0.5em'}}>Editar</span> {/* Texto \"Editar\" */}\r\n+                    </div>\r\n+                </div>\r\n+            )}\r\n         </div>\r\n-      )}\r\n-    </div>\r\n-  );\r\n+    );\r\n };\r\n \r\n-export default Avatar;\r\n+export default Avatar;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1740337426445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,14 @@\n import { Image } from 'react-bootstrap';\r\n import IconifyIcon from '@/components/wrappers/IconifyIcon';\r\n \r\n const Avatar = ({ src, alt }) => {\r\n-    const [image, setImage] = useState(src);\r\n-    const [isEditing, setIsEditing] = useState(false);\r\n+    const [image, setImage] = useState(src || \"/assets/images/users/dummy-avatar.jpg\");\r\n \r\n+    useEffect(() => {\r\n+        setImage(src || \"/assets/images/users/dummy-avatar.jpg\");\r\n+    }, [src]);    const [isEditing, setIsEditing] = useState(false);\r\n+\r\n     const handleEdit = () => {\r\n         setIsEditing(true);\r\n     };\r\n \r\n"
                },
                {
                    "date": 1740365354210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,17 @@\n-import { useState } from 'react';\r\n-import { Image } from 'react-bootstrap';\r\n-import IconifyIcon from '@/components/wrappers/IconifyIcon';\r\n+\"use client\"; // Garante que este é um Client Component\r\n \r\n+import { useState, useEffect } from \"react\"; // Importação correta\r\n+import { Image } from \"react-bootstrap\";\r\n+import IconifyIcon from \"@/components/wrappers/IconifyIcon\";\r\n+\r\n const Avatar = ({ src, alt }) => {\r\n     const [image, setImage] = useState(src || \"/assets/images/users/dummy-avatar.jpg\");\r\n+    const [isEditing, setIsEditing] = useState(false);\r\n \r\n     useEffect(() => {\r\n         setImage(src || \"/assets/images/users/dummy-avatar.jpg\");\r\n-    }, [src]);    const [isEditing, setIsEditing] = useState(false);\r\n+    }, [src]);\r\n \r\n     const handleEdit = () => {\r\n         setIsEditing(true);\r\n     };\r\n@@ -29,68 +32,68 @@\n \r\n     return (\r\n         <div\r\n             style={{\r\n-                width: '120px',\r\n-                height: '120px',\r\n-                borderRadius: '50%',\r\n-                overflow: 'hidden',\r\n-                position: 'relative',\r\n-                cursor: 'pointer',\r\n-                transition: 'opacity 0.3s ease', // Adiciona transição para suavizar o hover\r\n+                width: \"120px\",\r\n+                height: \"120px\",\r\n+                borderRadius: \"50%\",\r\n+                overflow: \"hidden\",\r\n+                position: \"relative\",\r\n+                cursor: \"pointer\",\r\n+                transition: \"opacity 0.3s ease\",\r\n             }}\r\n             onMouseEnter={handleEdit}\r\n             onMouseLeave={() => setIsEditing(false)}\r\n         >\r\n             <Image\r\n                 src={image}\r\n                 alt={alt}\r\n                 style={{\r\n-                    width: '100%',\r\n-                    height: '100%',\r\n-                    objectFit: 'cover',\r\n-                    transition: 'transform 0.3s ease', // Transição na imagem ao editar\r\n+                    width: \"100%\",\r\n+                    height: \"100%\",\r\n+                    objectFit: \"cover\",\r\n+                    transition: \"transform 0.3s ease\",\r\n                 }}\r\n             />\r\n             {isEditing && (\r\n                 <div\r\n                     style={{\r\n-                        position: 'absolute',\r\n+                        position: \"absolute\",\r\n                         top: 0,\r\n                         left: 0,\r\n-                        width: '100%',\r\n-                        height: '100%',\r\n-                        backgroundColor: 'rgba(0, 0, 0, 0)', // Começa transparente\r\n-                        display: 'flex',\r\n-                        alignItems: 'center',\r\n-                        justifyContent: 'center',\r\n-                        transition: 'background-color 0.3s ease', // Transição suave do background\r\n+                        width: \"100%\",\r\n+                        height: \"100%\",\r\n+                        backgroundColor: \"rgba(0, 0, 0, 0.5)\", // Deixa o fundo mais escuro ao editar\r\n+                        display: \"flex\",\r\n+                        alignItems: \"center\",\r\n+                        justifyContent: \"center\",\r\n+                        transition: \"background-color 0.3s ease\",\r\n                     }}\r\n                 >\r\n-                    <div // Div extra para o conteúdo do overlay\r\n+                    <div\r\n                         style={{\r\n-                            opacity: 0, // Começa invisível\r\n-                            transition: 'opacity 0.3s ease', // Transição suave da opacidade\r\n-                            display: 'flex',\r\n-                            flexDirection: 'column', // Alinha verticalmente\r\n-                            alignItems: 'center',\r\n+                            opacity: 1, // Agora visível\r\n\\ No newline at end of file\n+                            transition: \"opacity 0.3s ease\",\r\n+                            display: \"flex\",\r\n+                            flexDirection: \"column\",\r\n+                            alignItems: \"center\",\r\n                         }}\r\n                     >\r\n-                        <label htmlFor=\"imageInput\" style={{ cursor: 'pointer' }}>\r\n-                            <IconifyIcon icon=\"bx:camera\" color=\"white\" size=\"2em\" /> {/* Ícone maior */}\r\n+                        <label htmlFor=\"imageInput\" style={{ cursor: \"pointer\" }}>\r\n+                            <IconifyIcon icon=\"bx:camera\" color=\"white\" size=\"2em\" />\r\n                         </label>\r\n                         <input\r\n                             type=\"file\"\r\n                             id=\"imageInput\"\r\n                             accept=\"image/*\"\r\n-                            style={{ display: 'none' }}\r\n+                            style={{ display: \"none\" }}\r\n                             onChange={handleImageChange}\r\n                         />\r\n-                         <span style={{color: 'white', marginTop: '0.5em'}}>Editar</span> {/* Texto \"Editar\" */}\r\n+                        <span style={{ color: \"white\", marginTop: \"0.5em\" }}>Editar</span>\r\n                     </div>\r\n                 </div>\r\n             )}\r\n         </div>\r\n     );\r\n };\r\n \r\n-export default Avatar;\n+export default Avatar;\r\n"
                },
                {
                    "date": 1740399550765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,5 @@\n-\"use client\"; // Garante que este é um Client Component\r\n-\r\n+\"use client\"; \r\n import { useState, useEffect } from \"react\"; // Importação correta\r\n import { Image } from \"react-bootstrap\";\r\n import IconifyIcon from \"@/components/wrappers/IconifyIcon\";\r\n \r\n@@ -95,5 +94,5 @@\n         </div>\r\n     );\r\n };\r\n \r\n-export default Avatar;\n\\ No newline at end of file\n+export default Avatar;\r\n"
                }
            ],
            "date": 1740049995479,
            "name": "Commit-0",
            "content": "import { useState } from 'react';\r\nimport { Image } from 'react-bootstrap';\r\n\r\nconst Avatar = ({ src, alt }) => {\r\n  const [image, setImage] = useState(src);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const handleEdit = () => {\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      setImage(reader.result);\r\n      setIsEditing(false);\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '120px',\r\n        height: '120px',\r\n        borderRadius: '50%',\r\n        overflow: 'hidden',\r\n        position: 'relative',\r\n        cursor: 'pointer',\r\n      }}\r\n      onMouseEnter={handleEdit}\r\n      onMouseLeave={() => setIsEditing(false)}\r\n    >\r\n      <Image\r\n        src={image}\r\n        alt={alt}\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          objectFit: 'cover',\r\n        }}\r\n      />\r\n      {isEditing && (\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <label htmlFor=\"imageInput\" style={{ cursor: 'pointer' }}>\r\n            <IconifyIcon icon=\"bx:camera\" color=\"white\" />\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"imageInput\"\r\n            accept=\"image/*\"\r\n            style={{ display: 'none' }}\r\n            onChange={handleImageChange}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n"
        }
    ]
}