{
    "sourceFile": "src/app/(administrador)/admin-validacao/page.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1741290476322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1741290476322,
            "name": "Commit-0",
            "content": "\"use client\";\r\n\r\nimport { useState } from \"react\";\r\nimport { Card, CardBody, Form, Button, Alert } from \"react-bootstrap\";\r\n\r\nconst ValidacaoAdmin = () => {\r\n    const [clientId, setClientId] = useState(\"\");\r\n    const [couponCode, setCouponCode] = useState(\"\");\r\n    const [message, setMessage] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setMessage(\"\");\r\n        setError(\"\");\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(\"/api/admin/validarVoucher\", { // ✅ Agora chamamos a API de admins\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({ clientId, couponCode }),\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (response.ok) {\r\n                setMessage(data.message);\r\n                setClientId(\"\");\r\n                setCouponCode(\"\");\r\n            } else {\r\n                setError(data.error || \"Erro ao validar o voucher.\");\r\n            }\r\n        } catch (err) {\r\n            console.error(\"❌ Erro na requisição:\", err);\r\n            setError(\"Erro ao validar o voucher. Tente novamente mais tarde.\");\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <CardBody>\r\n                <h2>Validação de Vouchers (Admin)</h2>\r\n\r\n                {message && <Alert variant=\"success\">{message}</Alert>}\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\" controlId=\"clientId\">\r\n                        <Form.Label>ID da Carteirinha do Cliente</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={clientId}\r\n                            onChange={(e) => setClientId(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\" controlId=\"couponCode\">\r\n                        <Form.Label>Código do Voucher</Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            value={couponCode}\r\n                            onChange={(e) => setCouponCode(e.target.value)}\r\n                            required\r\n                        />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\" disabled={loading}>\r\n                        {loading ? \"Validando...\" : \"Validar\"}\r\n                    </Button>\r\n                </Form>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default ValidacaoAdmin;\r\n"
        }
    ]
}