{
    "sourceFile": "src/app/api/parceiro/voucher/route.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1740335398607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1740402214717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     if (!session || session.user.role !== \"parceiro\") {\r\n       return new Response(JSON.stringify({ error: \"Acesso negado\" }), { status: 403 });\r\n     }\r\n \r\n-    console.log(\"üì° Buscando vouchers para parceiro:\", session.user.email);\r\n+    console.log(\"üì° Buscando vouchers e desconto para parceiro:\", session.user.email);\r\n \r\n     // Buscar o ID do parceiro logado\r\n     const parceiroQuery = `SELECT id, nome_empresa, foto FROM parceiros WHERE email = $1`;\r\n     const parceiroResult = await pool.query(parceiroQuery, [session.user.email]);\r\n@@ -34,27 +34,33 @@\n       WHERE v.parceiro_id = $1\r\n     `;\r\n     const voucherResult = await pool.query(voucherQuery, [parceiro.id]);\r\n \r\n-    if (voucherResult.rows.length === 0) {\r\n-      return new Response(JSON.stringify({ error: \"Nenhum voucher encontrado\" }), { status: 404 });\r\n-    }\r\n+    // Buscar o maior desconto do parceiro\r\n+    const descontoQuery = `\r\n+      SELECT MAX(desconto) AS maior_desconto\r\n+      FROM vouchers\r\n+      WHERE parceiro_id = $1\r\n+    `;\r\n+    const descontoResult = await pool.query(descontoQuery, [parceiro.id]);\r\n \r\n-    // Montar resposta com dados formatados\r\n+    const maiorDesconto = descontoResult.rows[0].maior_desconto || \"Nenhum desconto dispon√≠vel\";\r\n+\r\n+    // Formatar os vouchers\r\n     const vouchers = voucherResult.rows.map(voucher => ({\r\n       nome: parceiro.nome_empresa,\r\n       descricao: `${voucher.voucher_desconto}% de desconto`,\r\n       codigo: voucher.voucher_codigo,\r\n       validade: new Date(voucher.data_criacao).toLocaleDateString(\"pt-BR\"),\r\n       logo: parceiro.foto\r\n     }));\r\n \r\n-    return new Response(JSON.stringify(vouchers), {\r\n+    return new Response(JSON.stringify({ vouchers, maiorDesconto }), {\r\n       status: 200,\r\n       headers: { \"Content-Type\": \"application/json\" },\r\n     });\r\n \r\n   } catch (error) {\r\n-    console.error(\"‚ùå Erro ao buscar voucher:\", error);\r\n-    return new Response(JSON.stringify({ error: \"Erro interno ao buscar voucher\" }), { status: 500 });\r\n+    console.error(\"‚ùå Erro ao buscar vouchers e desconto:\", error);\r\n+    return new Response(JSON.stringify({ error: \"Erro interno ao buscar informa√ß√µes.\" }), { status: 500 });\r\n   }\r\n }\r\n"
                },
                {
                    "date": 1740402420586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,15 +36,15 @@\n     const voucherResult = await pool.query(voucherQuery, [parceiro.id]);\r\n \r\n     // Buscar o maior desconto do parceiro\r\n     const descontoQuery = `\r\n-      SELECT MAX(desconto) AS maior_desconto\r\n+      SELECT MAX(desconto) AS desconto\r\n       FROM vouchers\r\n       WHERE parceiro_id = $1\r\n     `;\r\n     const descontoResult = await pool.query(descontoQuery, [parceiro.id]);\r\n \r\n-    const maiorDesconto = descontoResult.rows[0].maior_desconto || \"Nenhum desconto dispon√≠vel\";\r\n+    const desconto = descontoResult.rows[0].desconto || \"Nenhum desconto dispon√≠vel\";\r\n \r\n     // Formatar os vouchers\r\n     const vouchers = voucherResult.rows.map(voucher => ({\r\n       nome: parceiro.nome_empresa,\r\n@@ -53,9 +53,9 @@\n       validade: new Date(voucher.data_criacao).toLocaleDateString(\"pt-BR\"),\r\n       logo: parceiro.foto\r\n     }));\r\n \r\n-    return new Response(JSON.stringify({ vouchers, maiorDesconto }), {\r\n+    return new Response(JSON.stringify({ vouchers, desconto }), {\r\n       status: 200,\r\n       headers: { \"Content-Type\": \"application/json\" },\r\n     });\r\n \r\n"
                }
            ],
            "date": 1740335398607,
            "name": "Commit-0",
            "content": "import { Pool } from \"pg\";\r\nimport { getServerSession } from \"next-auth\";\r\nimport { options } from \"@/app/api/auth/[...nextauth]/options\"; // Caminho do NextAuth\r\n\r\nconst pool = new Pool({\r\n  connectionString: process.env.DATABASE_URL,\r\n});\r\n\r\nexport async function GET(req) {\r\n  try {\r\n    // Obter sess√£o do usu√°rio logado\r\n    const session = await getServerSession(options);\r\n\r\n    if (!session || session.user.role !== \"parceiro\") {\r\n      return new Response(JSON.stringify({ error: \"Acesso negado\" }), { status: 403 });\r\n    }\r\n\r\n    console.log(\"üì° Buscando vouchers para parceiro:\", session.user.email);\r\n\r\n    // Buscar o ID do parceiro logado\r\n    const parceiroQuery = `SELECT id, nome_empresa, foto FROM parceiros WHERE email = $1`;\r\n    const parceiroResult = await pool.query(parceiroQuery, [session.user.email]);\r\n\r\n    if (parceiroResult.rows.length === 0) {\r\n      return new Response(JSON.stringify({ error: \"Parceiro n√£o encontrado\" }), { status: 404 });\r\n    }\r\n\r\n    const parceiro = parceiroResult.rows[0];\r\n\r\n    // Buscar os vouchers do parceiro\r\n    const voucherQuery = `\r\n      SELECT v.id AS voucher_id, v.codigo AS voucher_codigo, v.desconto AS voucher_desconto, v.data_criacao\r\n      FROM vouchers v\r\n      WHERE v.parceiro_id = $1\r\n    `;\r\n    const voucherResult = await pool.query(voucherQuery, [parceiro.id]);\r\n\r\n    if (voucherResult.rows.length === 0) {\r\n      return new Response(JSON.stringify({ error: \"Nenhum voucher encontrado\" }), { status: 404 });\r\n    }\r\n\r\n    // Montar resposta com dados formatados\r\n    const vouchers = voucherResult.rows.map(voucher => ({\r\n      nome: parceiro.nome_empresa,\r\n      descricao: `${voucher.voucher_desconto}% de desconto`,\r\n      codigo: voucher.voucher_codigo,\r\n      validade: new Date(voucher.data_criacao).toLocaleDateString(\"pt-BR\"),\r\n      logo: parceiro.foto\r\n    }));\r\n\r\n    return new Response(JSON.stringify(vouchers), {\r\n      status: 200,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n\r\n  } catch (error) {\r\n    console.error(\"‚ùå Erro ao buscar voucher:\", error);\r\n    return new Response(JSON.stringify({ error: \"Erro interno ao buscar voucher\" }), { status: 500 });\r\n  }\r\n}\r\n"
        }
    ]
}